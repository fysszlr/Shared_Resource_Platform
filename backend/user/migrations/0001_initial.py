# Generated by Django 5.1.2 on 2024-11-24 07:19

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('MessageId', models.IntegerField(primary_key=True, serialize=False, verbose_name='消息ID')),
                ('UserId', models.IntegerField(db_column='UserId', verbose_name='用户ID')),
                ('Type', models.CharField(choices=[('Notice', '公告'), ('Comment', '评论'), ('Reply', '回复'), ('Answer', '回答'), ('Reward', '奖励')], max_length=50, verbose_name='类型')),
                ('Read', models.BooleanField(default=False, verbose_name='是否已读')),
            ],
        ),
        migrations.CreateModel(
            name='Notices',
            fields=[
                ('noticeId', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50)),
                ('text', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True, verbose_name='URL')),
            ],
        ),
        migrations.CreateModel(
            name='Rewards',
            fields=[
                ('rewardId', models.AutoField(primary_key=True, serialize=False)),
                ('headline', models.CharField(max_length=50)),
                ('reward', models.IntegerField()),
                ('text', models.TextField()),
                ('cover', models.CharField(max_length=255)),
                ('profile', models.CharField(max_length=200)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True, verbose_name='URL')),
            ],
        ),
        migrations.CreateModel(
            name='Shares',
            fields=[
                ('shareId', models.AutoField(primary_key=True, serialize=False)),
                ('headline', models.CharField(max_length=50)),
                ('price', models.IntegerField(default=0)),
                ('text', models.TextField()),
                ('cover', models.CharField(max_length=255)),
                ('profile', models.CharField(max_length=200)),
                ('resourceLink', models.CharField(max_length=255)),
                ('like', models.IntegerField(default=0)),
                ('dislike', models.IntegerField(default=0)),
                ('coin', models.IntegerField(default=0)),
                ('favourite', models.IntegerField(default=0)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('bhpanUrl', models.CharField(blank=True, max_length=255, null=True, verbose_name='BHPAN URL')),
                ('url', models.CharField(blank=True, max_length=255, null=True, verbose_name='URL')),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('tagId', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('userId', models.IntegerField(primary_key=True, serialize=False, verbose_name='User ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('email', models.CharField(max_length=100, verbose_name='Email')),
                ('password', models.CharField(max_length=50, verbose_name='Password')),
                ('status', models.CharField(choices=[('User', 'User'), ('Administrator', 'Administrator'), ('Root', 'Root')], default='User', max_length=50, verbose_name='Status')),
                ('avatar', models.CharField(blank=True, max_length=255, null=True, verbose_name='Avatar Path')),
                ('profile', models.CharField(blank=True, max_length=200, null=True, verbose_name='Profile')),
                ('coin', models.IntegerField(default=0, verbose_name='Coin Quantity')),
                ('color', models.BooleanField(default=False, verbose_name='Color Preference (0: Dark Mode, 1: Background Grain)')),
                ('token', models.CharField(blank=True, max_length=200, null=True, verbose_name='Token')),
                ('block', models.BooleanField(default=False, verbose_name='Block')),
            ],
        ),
        migrations.CreateModel(
            name='NoticeMessages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('NoticeId', models.IntegerField(blank=True, null=True, verbose_name='公告ID')),
                ('MessageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.messages', verbose_name='消息ID')),
            ],
        ),
        migrations.CreateModel(
            name='RewardMessages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RewardId', models.IntegerField(blank=True, null=True, verbose_name='分享ID')),
                ('MessageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.messages', verbose_name='消息ID')),
            ],
        ),
        migrations.CreateModel(
            name='ShareMessages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ShareId', models.IntegerField(blank=True, null=True, verbose_name='分享ID')),
                ('MessageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.messages', verbose_name='消息ID')),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('commentId', models.IntegerField(primary_key=True, serialize=False, verbose_name='创建评论时唯一指定')),
                ('type', models.CharField(choices=[('Comment', '回复帖子'), ('Reply', '回复回复')], max_length=50, verbose_name='仅有两种值：Comment，Reply（回复帖子、回复回复）')),
                ('text', models.TextField(verbose_name='回复正文')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('replyId', models.ForeignKey(blank=True, db_column='ReplyId', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='user.comments', verbose_name='关联到Comments，被回复的评论id，仅当Type为Reply时有效')),
                ('shareId', models.ForeignKey(db_column='ShareId', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='user.shares', verbose_name='关联到Shares，帖子id')),
            ],
        ),
        migrations.CreateModel(
            name='RewardTags',
            fields=[
                ('rewardTagId', models.AutoField(primary_key=True, serialize=False)),
                ('rewardId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.rewards')),
                ('tagId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.tags')),
            ],
        ),
        migrations.CreateModel(
            name='NoticeTags',
            fields=[
                ('noticeTagId', models.AutoField(primary_key=True, serialize=False)),
                ('noticeId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.notices')),
                ('tagId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.tags')),
            ],
        ),
        migrations.CreateModel(
            name='ShareTags',
            fields=[
                ('shareTagId', models.AutoField(primary_key=True, serialize=False)),
                ('shareId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.shares')),
                ('tagId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.tags')),
                ('creatorId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.users')),
            ],
        ),
        migrations.AddField(
            model_name='shares',
            name='creatorId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.users'),
        ),
        migrations.CreateModel(
            name='ShareOperators',
            fields=[
                ('operatorId', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('Purchase', '购买'), ('Like', '点赞'), ('Dislike', '点踩'), ('Coin', '投币'), ('Favourite', '收藏')], max_length=50)),
                ('coin', models.IntegerField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('shareId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.shares')),
                ('userId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.users')),
            ],
        ),
        migrations.AddField(
            model_name='rewards',
            name='creatorId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.users'),
        ),
        migrations.CreateModel(
            name='Follows',
            fields=[
                ('followId', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('fromId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to='user.users')),
                ('toId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to='user.users')),
            ],
        ),
        migrations.CreateModel(
            name='CommentOperators',
            fields=[
                ('commentOperatorId', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('Like', 'Like'), ('Dislike', 'Dislike')], max_length=50)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('commentId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.shares')),
                ('userId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.users')),
            ],
        ),
        migrations.CreateModel(
            name='Answers',
            fields=[
                ('answerId', models.AutoField(primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('resource_link', models.CharField(max_length=255)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('rewardId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.rewards')),
                ('creatorId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.users')),
            ],
        ),
    ]
